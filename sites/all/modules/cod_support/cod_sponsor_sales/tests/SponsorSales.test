<?php
/**
 * @file
 * Unit test for cod_sponsorship_sales feature.
 */

class SponsorSalesTestCase extends DrupalWebTestCase {

  protected $sponsorSales;

  /**
   * Set up tests.
   */
  public function setUp() {
    $this->setup = TRUE;
    $this->sponsorSales = new SponsorSales();
  }

  /**
   * Overrides parent::tearDown().
   */
  public function tearDown() {
  }

  /**
   * Initialize.
   */
  public static function getInfo() {
    return array(
      'name' => 'Cod Sponsorship Sales.',
      'description' => 'Getting My Head Around Entities.',
      'group' => 'Cod',
    );
  }

  /**
   * Check that we have created a default sponsorship product.
   */
  public function testDefaultSponsorshipProduct() {
    $sponsorship = commerce_product_load_by_sku('sponsorship');
    $this->assertTrue((bool) $sponsorship, "A default sponsorship product has been created.");
  }

  /**
   * Check that the Authenticated User can create Sponsor nodes by default.
   */
  public function testAuthenticatedUserHasRights() {
    $perms = user_role_permissions(array(
      DRUPAL_AUTHENTICATED_RID => 'authenticated user',
    ));
    $authenticated_perms =& $perms[DRUPAL_AUTHENTICATED_RID];
    $this->assertTrue($authenticated_perms['create sponsor content'],
      'The  authenticated user can create sponsor content.');
    $this->assertTrue($authenticated_perms['access checkout'],
      'The authenticated user has access to the commerce checkout system.');
  }

  /**
   * Check that the sponsor has commerce_node_checkout product.
   */
  public function testSponsorHasCommerceNodeCheckout() {
    $products = $this->sponsorSales->getSponsorProducts();
    $this->assertTrue(is_array($products) && count($products) >= 1,
      'The sponsor content has at least one commerce_node_checkout product associated to it.');
  }

  /**
   * Verify that our module runs after commerce_node_checkout.
   *
   * Since we will be overriding some of the default functionality
   * provided by commerce_node_checkout, we need to make sure we run after
   * it does.
   */
  public function testSponsorSalesAfterCommerceNodeCheckout() {
    $weight_cnc = db_query("select weight from system where name = 'commerce_node_checkout'")->fetchField();
    $weight_cod = db_query("select weight from system where name = 'cod_sponsor_sales'")->fetchField();
    $this->assertTrue($weight_cod > $weight_cnc, "cod_sponsor_sales is weighter heavier than commerce_node_checkout.");

  }

  /**
   * Check that our form wrapper will work properly.
   */
  public function testSponsorSalesForm() {
    module_load_include('inc', 'node', 'node.pages');

    $form = node_add('sponsor');
    $sponsor_sales_form = new SponsorSalesForm($form);
    $item =& $sponsor_sales_form->getElement('field_sponsor_logo');
    $this->assertTrue(is_array($item), 'SponsorSalesForm::getElement() can return a form element.');
    $this->assertEqual($item['#bundle'], $form['field_sponsor_logo']['und'][0]['#bundle'], 'SponsorSalesForm::getElement() returns the expected item.');

    $name = $sponsor_sales_form->getElementPropertyValueRef('field_sponsor_logo', '#field_name');
    $this->assertEqual($name, 'field_sponsor_logo', 'SponsorSalesForm::getElementPropertyValueRef with string index works as expected.');
    $name2 = $sponsor_sales_form->getElementPropertyValueRef('field_sponsor_logo', array('fid', '#type'));
    $this->assertEqual($name2, 'hidden', 'SponsorSalesForm::getElementPropertyValueRef with array index works as expected.');
  }

  /**
   * Check that the sponsor node form is altered properly.
   *
   * We are looking to see that a reference to the sponsorship node is
   * added to the sponsor node form.  We are seeking a different behaviour
   * than that of the default provided by the commer_node_checkhout module.
   * In that case the form would be altered to give the user a list of
   * sponsorship products to associate with the node in the case where
   * there are multiple products to choose from.  But, since we will be
   * automatically choosing the product based on a taxonomy term, we may
   * skip this step. 
   */
  public function testSponsorNodeFormAlter() {
    module_load_include('inc', 'node', 'node.pages');
    $form = node_add('sponsor');

  }

}
